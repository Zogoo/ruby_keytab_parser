require './token.rb'
require 'byebug'
require 'pry'

# Initial token test
def test_for_initial_token
  token_init = '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'
  spnego = SpnegoToken.new(token_init)

  raise 'Could not parse mech type from spnego token' if spnego.token.mechanism.nil?
  raise 'Could not parse kerb ticket from spengo ticket' if spnego.token.mechanism_token.nil?
  raise 'Spnego mechanism is wrong' unless spnego.token.object_id == BaseSpnego::SPNEGO_MECHANISM
end

# Resp token test
def test_for_resp_token
  token_resp = 'oYGxMIGuoAMKAQChCwYJKoZIhvcSAQICooGZBIGWYIGTBgkqhkiG9xIBAgICAG+BgzCBgKADAgEFoQMCAQ+idDByoAMCAReiawRpzfYTwxzcxQojbbaG0qxvTlVDto0Ezq4czUc3A5HhWFe/oL5hjqcBr/WDQs82Bs/t63WBb+NiRPPJk/2Ogmeeu0zP6kL9U5Hk0Mzo7dLayZdyM0emZjkVkgPNHjvZ/NNcBegDbBxoMcmn'
  spnego = SpnegoToken.new(token_resp)

  raise 'Could not parse mech type from spnego token' if spnego.token.mechanism.nil?
  raise 'Could not parse kerb ticket from spengo ticket' if spnego.token.mechanism_token.nil?
  raise 'Could not parse negotiation result' unless spnego.token.result == NegTokenResp::ACCEPT_COMPLETE
end

test_for_initial_token
test_for_resp_token